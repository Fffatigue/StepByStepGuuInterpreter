package interpreter.view;

import interpreter.controller.InterpreterController;
import interpreter.controller.commandFactory.commands.CommandException;
import interpreter.main.RunButtonWrapper;
import interpreter.util.PlaceHolderTextField;

import javax.swing.*;
import java.awt.*;
import java.io.*;

public class InterpreterPanel {
    private RunButtonWrapper runButtonWrapper;
    private JPanel rootPanel;
    private JTextPane editorPane;
    private JTextField inputLine;
    private JTextPane consolePane;
    private JScrollPane scrollPane1;
    private JSplitPane splitPane1;
    private LineNumbersView lineNumbersView;
    private InterpreterController interpreterController;

    private static final String START_MESSAGE = "To see the list of available commands, enter \"help\".\n";

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public InterpreterPanel() {
        $$$setupUI$$$();
        interpreterController = new InterpreterController( consolePane, editorPane, lineNumbersView );
        consolePane.setEditable( false );
        splitPane1.setResizeWeight( 0.7 );
        consolePane.setText( START_MESSAGE );
    }

    public void setRunButtonWrapper(RunButtonWrapper runButtonWrapper) {
        this.runButtonWrapper = runButtonWrapper;
    }

    public void saveProgram(File f) throws IOException {
        try (BufferedWriter bw = new BufferedWriter( new FileWriter( f ) )) {
            bw.write( editorPane.getText() );
        }
    }

    public void loadProgram(File f) throws IOException {
        StringBuilder stringBuilder = new StringBuilder();
        try (BufferedReader br = new BufferedReader( new FileReader( f ) )) {
            String s;
            while ((s = br.readLine()) != null) {
                stringBuilder.append( s ).append( "\n" );
            }
            editorPane.setText( stringBuilder.toString() );
        }
    }

    public void runInterpretation(boolean run) {
        if (run) {
            editorPane.setEditable( false );
            try {
                interpreterController.run();
            } catch (Exception exception) {
                consolePane.setText( consolePane.getText() + exception.getMessage() + "\n" );
                runButtonWrapper.onRun( false );
            }
        } else {
            interpreterController.stop();
            editorPane.setEditable( true );
        }
        rootPanel.repaint();
    }

    public void clear() {
        editorPane.setText( "" );
    }

    private void createUIComponents() {
        editorPane = new JTextPane();
        scrollPane1 = new JScrollPane();
        lineNumbersView = new LineNumbersView( editorPane );
        scrollPane1.setRowHeaderView( lineNumbersView );

        splitPane1 = new JSplitPane();


        inputLine = new PlaceHolderTextField( "Enter the command" );
        inputLine.addActionListener( e -> {
            try {
                String command = inputLine.getText();
                consolePane.setText( consolePane.getText() + command + "\n" );
                inputLine.setText( "" );
                interpreterController.executeCommand( command );
                rootPanel.repaint();
            } catch (CommandException | ClassNotFoundException exception) {
                consolePane.setText( consolePane.getText() + exception.getMessage() + "\n" );
            } catch (Exception exception) {
                consolePane.setText( consolePane.getText() + exception.getMessage() + "\n" );
                runButtonWrapper.onRun( false );
            }
        } );
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel = new JPanel();
        rootPanel.setLayout( new GridBagLayout() );
        splitPane1.setOrientation( 0 );
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 200.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        rootPanel.add( splitPane1, gbc );
        splitPane1.setLeftComponent( scrollPane1 );
        scrollPane1.setViewportView( editorPane );
        final JPanel panel1 = new JPanel();
        panel1.setLayout( new GridBagLayout() );
        splitPane1.setRightComponent( panel1 );
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.SOUTHWEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add( inputLine, gbc );
        final JScrollPane scrollPane2 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 90.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add( scrollPane2, gbc );
        consolePane = new JTextPane();
        scrollPane2.setViewportView( consolePane );
        final JLabel label1 = new JLabel();
        label1.setEnabled( true );
        label1.setText( "Note : Press Enter to execute the command." );
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add( label1, gbc );
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
